1.

W pliku s292630_create.sql

2.

CREATE SCHEMA sklep;

3.

W pliku s292630_create.sql

4.

W pliku s292630_create.sql

5.

W pliku s292630_create.sql

6.

INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('BMW','bmwdealer@gmail.com','502845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Mercedes','merccdealer@gmail.com','512845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Audi','audidealer@gmail.com','522845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Lamborghini','lambodealer@gmail.com','532845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Ford','forddealer@gmail.com','542845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Kia','kiadealer@gmail.com','552845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Renault','renaultdealer@gmail.com','562845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Volvo','volvodealer@gmail.com','572845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Alfa Romeo','alfadealer@gmail.com','582845963');
INSERT INTO sklep.producenci(nazwa_producenta, mail, telefon) VALUES ('Aston Martin','astondealer@gmail.com','592845963');
	
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('M5', 100, 1);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('E63S AMG', 110, 2);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('RS7', 95, 3);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('Aventador', 300, 4);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('Focus RS', 55, 5);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('Stinger GT', 80, 6);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('Megane RS', 50, 7);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('XC40', 60, 8);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('Giulia Quadrifoglio', 90, 9);
INSERT INTO sklep.produkty(nazwa_produktu, cena, id_producenta) VALUES ('DB11', 250, 10);

INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (2, 50, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (2, 150, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (3, 60, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (3, 100, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (4, 70, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (4, 80, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (5, 100, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (5, 40, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (6, 25, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (6, 65, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (7, 55, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (7, 55, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (8, 30, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (8, 110, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (9, 200, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (9, 100, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (10, 75, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (10, 45, '2019-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (11, 100, '2020-06-10');
INSERT INTO sklep.zamowienia(id_produktu, liczba_sztuk, data) VALUES (11, 120, '2019-06-10');

7.

pg_dump -U postgres s292630 > s292630.bak

8.

dropdb -U postgres s292630

9.

createdb -U postgres s292630_backup
psql -U postgres s292630_backup < s292630.bak

10.

ALTER DATABASE s292630_backup RENAME TO s292630

11.

a)

SELECT CONCAT('Producent: ', nazwa_producenta, ', liczba zamowien: ', SUM(liczba_sztuk), ', wartosc zamowienia: ', SUM(liczba_sztuk*cena)) FROM sklep.zamowienia RIGHT JOIN sklep.produkty ON 
zamowienia.id_produktu = produkty.id_produktu RIGHT JOIN sklep.producenci ON produkty.id_producenta = producenci.id_producenta GROUP BY producenci.id_producenta;

b)

SELECT CONCAT('Produkt: ', nazwa_produktu, ', liczba zamowien: ', COUNT(id_zamowienia)) FROM sklep.zamowienia RIGHT JOIN sklep.produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY nazwa_produktu;

c)

SELECT * FROM sklep.zamowienia NATURAL JOIN sklep.produkty;

d)

SELECT * FROM sklep.zamowienia WHERE DATE_PART('month', data) = 1;

e)

SELECT count(id_zamowienia), DATE_PART('dow', data) as dzien_tygodnia FROM sklep.zamowienia GROUP BY dzien_tygodnia;

f)

SELECT SUM(liczba_sztuk*cena) AS przychod, DATE_PART('dow', data) AS dzien_tygodnia FROM sklep.zamowienia JOIN sklep.produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY dzien_tygodnia ORDER BY przychod DESC;

g)

SELECT nazwa_produktu, COUNT(id_zamowienia) AS ilosc_zamowien FROM sklep.zamowienia RIGHT JOIN sklep.produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY produkty.id_produktu ORDER BY ilosc_zamowien DESC;

12.

a)

SELECT CONCAT('Produkt ', UPPER(nazwa_produktu), ', ktorego producentem jest ', LOWER(nazwa_producenta), ', zamowiono ', COUNT(id_zamowienia), ' razy.') AS opis FROM sklep.zamowienia RIGHT JOIN sklep.produkty ON 
zamowienia.id_produktu = produkty.id_produktu JOIN sklep.producenci ON produkty.id_producenta = producenci.id_producenta GROUP BY nazwa_produktu, nazwa_producenta ORDER BY COUNT(id_zamowienia) DESC;

b)

SELECT zamowienia.*, produkty.*, SUM(liczba_sztuk*cena) FROM sklep.zamowienia JOIN sklep.produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY id_zamowienia, produkty.id_produktu ORDER BY SUM(liczba_sztuk*cena) 
DESC LIMIT (SELECT COUNT(*) FROM sklep.zamowienia) - 3;

c)

CREATE TABLE sklep.klienci(id_klienta SERIAL PRIMARY KEY, email VARCHAR(40) NOT NULL, telefon VARCHAR(9) NOT NULL);

d)

ALTER TABLE sklep.zamowienia ADD COLUMN id_klienta INT REFERENCES sklep.klienci(id_klienta);
INSERT INTO sklep.klienci(email, telefon) VALUES
('wypozyczalnia@krakow.pl', '502651611'),
('leasing@krakow.pl', '512651611'),
('bor@gov.pl', '522651611'),
('kulczyk@kulczykinvest.pl', '532651611'),
('mohamed@szejk.pl', '542651611'),
('bieda@piszczy.pl','552651611');
UPDATE sklep.zamowienia SET id_klienta = 1 WHERE id_zamowienia IN (6, 7);
UPDATE sklep.zamowienia SET id_klienta = 2 WHERE id_zamowienia IN (1, 2, 3, 4, 5);
UPDATE sklep.zamowienia SET id_klienta = 3 WHERE id_zamowienia IN (10, 11, 12, 13, 14, 15, 16);
UPDATE sklep.zamowienia SET id_klienta = 4 WHERE id_zamowienia IN (17, 18);
UPDATE sklep.zamowienia SET id_klienta = 5 WHERE id_zamowienia IN (8, 9, 19, 20);

e)

SELECT klienci.*, nazwa_produktu, liczba_sztuk, liczba_sztuk*cena AS wartosc_zamowienia FROM sklep.zamowienia RIGHT JOIN sklep.klienci ON zamowienia.id_klienta = klienci.id_klienta JOIN sklep.produkty 
ON zamowienia.id_produktu = produkty.id_produktu;

f)

SELECT CONCAT('NAJRZADZIEJ ZAMAWIAJACY: ', klienci.*, ', ilosc zamowien: ', COUNT(id_zamowienia), ', wartosc: ', SUM(liczba_sztuk*cena)) FROM sklep.zamowienia RIGHT JOIN sklep.klienci ON zamowienia.id_klienta = klienci.id_klienta 
JOIN sklep.produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY klienci.id_klienta ORDER BY COUNT(id_zamowienia) LIMIT 1;
SELECT CONCAT('NAJCZESCIEJ ZAMAWIAJACY: ', klienci.*, ', ilosc zamowien: ', COUNT(id_zamowienia), ', wartosc: ', SUM(liczba_sztuk*cena)) FROM sklep.zamowienia RIGHT JOIN sklep.klienci ON zamowienia.id_klienta = klienci.id_klienta 
JOIN sklep.produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY klienci.id_klienta ORDER BY COUNT(id_zamowienia) DESC LIMIT 1;

g)

DELETE FROM sklep.produkty WHERE id_produktu IN (SELECT zamowienia.id_produktu FROM sklep.zamowienia RIGHT JOIN sklep.produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY zamowienia.id_produktu HAVING COUNT(id_zamowienia) = 0);

13.

a)

CREATE TABLE numer(liczba DECIMAL(4,0));

b)

CREATE SEQUENCE liczba_seq START WITH 100 INCREMENT BY 5 MINVALUE 0 MAXVALUE 125 CYCLE;

c)

INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));

d)

ALTER SEQUENCE liczba_seq INCREMENT BY 6;

e)

SELECT nextval('liczba_seq');
SELECT nextval('liczba_seq');

f)

DROP SEQUENCE liczba_seq;

14.

a)

\du

b)

CREATE USER Superuser292630 SUPERUSER;
CREATE USER guest292630;
GRANT CONNECT ON DATABASE s292630 TO guest292630;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO guest292630;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO guest292630;
\du

c)

ALTER USER Superuser292630 RENAME TO student;
ALTER USER student WITH NOSUPERUSER;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO student;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO student;

15.

a)

BEGIN;
UPDATE sklep.produkty SET cena = cena + 10;
COMMIT;

b)

BEGIN;
UPDATE sklep.produkty SET cena = 1.1*cena WHERE id_produktu = 3;
SAVEPOINT S1;
UPDATE sklep.zamowienia SET liczba_sztuk = 1.25*liczba_sztuk;
SAVEPOINT S2;
DELETE FROM sklep.klienci WHERE id_klienta IN (SELECT klienci.id_klienta FROM sklep.klienci JOIN sklep.zamowienia ON klienci.id_klienta = zamowienia.id_klienta JOIN 
sklep.produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY klienci.id_klienta ORDER BY SUM(cena*liczba_sztuk) DESC LIMIT 1);
ROLLBACK TO S1;
ROLLBACK TO S2;
ROLLBACK;
COMMIT;

c)

CREATE OR REPLACE FUNCTION udzial()
RETURNS TABLE (procent text) AS
$func$
BEGIN
	RETURN QUERY
	SELECT CONCAT(nazwa_producenta, ': ', (COUNT(id_zamowienia) / CAST((SELECT COUNT(*) FROM sklep.zamowienia) AS FLOAT))*100, '%') FROM sklep.producenci JOIN sklep.produkty ON 
    producenci.id_producenta = produkty.id_producenta JOIN sklep.zamowienia ON produkty.id_produktu = zamowienia.id_produktu GROUP BY (producenci.id_producenta);
END
$func$ LANGUAGE plpgsql;

SELECT udzial();