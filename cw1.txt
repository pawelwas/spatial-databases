1.

CREATE DATABASE s292630;

2.

CREATE SCHEMA firma;

3.

CREATE ROLE ksiegowosc;
    
ALTER DEFAULT PRIVILEGES IN SCHEMA firma
    GRANT SELECT ON TABLES TO ksiegowosc;

4.  

a)

CREATE TABLE firma.pracownicy
(
    adres character varying(255),
    id_pracownika serial NOT NULL,
    imie character varying(255),
    nazwisko character varying(255),
    telefon numeric(9)
);

CREATE TABLE firma.godziny
(
    id_godziny serial NOT NULL,
    data date,
    liczba_godzin integer,
    id_pracownika integer NOT NULL
);

CREATE TABLE firma.pensja_stanowisko
(
    id_pensji serial NOT NULL,
    stanowisko character varying(255),
    kwota integer
);

CREATE TABLE firma.premia
(
    id_premii serial NOT NULL,
    rodzaj character varying(255),
    kwota integer
);

CREATE TABLE firma.wynagrodzenie
(
    id_wynagrodzenia serial NOT NULL,
    data date,
    id_pracownika integer NOT NULL,
    id_godziny integer NOT NULL,
    id_pensji integer NOT NULL,
    id_premii integer NOT NULL
);

b)

ALTER TABLE firma.pracownicy
    ADD PRIMARY KEY (id_pracownika);

ALTER TABLE firma.godziny
    ADD PRIMARY KEY (id_godziny);

ALTER TABLE firma.pensja_stanowisko
    ADD PRIMARY KEY (id_pensji);

ALTER TABLE firma.premia
    ADD PRIMARY KEY (id_premii);

ALTER TABLE firma.wynagrodzenie
    ADD PRIMARY KEY (id_wynagrodzenia);

c)

ALTER TABLE firma.godziny
    ADD FOREIGN KEY (id_pracownika)
    REFERENCES firma.pracownicy (id_pracownika) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE firma.wynagrodzenie
    ADD FOREIGN KEY (id_pracownika)
    REFERENCES firma.pracownicy (id_pracownika) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE firma.wynagrodzenie
    ADD FOREIGN KEY (id_godziny)
    REFERENCES firma.godziny (id_godziny) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE firma.wynagrodzenie
    ADD FOREIGN KEY (id_pensji)
    REFERENCES firma.pensja_stanowisko (id_pensji) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE firma.wynagrodzenie
    ADD FOREIGN KEY (id_premii)
    REFERENCES firma.premia (id_premii) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

d)

CREATE INDEX imie_idx ON firma.pracownicy (imie);
CREATE INDEX nazwisko_idx ON firma.pracownicy (nazwisko);

e)

COMMENT ON TABLE firma.pracownicy
    IS 'Tabela pracowników';

COMMENT ON TABLE firma.godziny
    IS 'Tabela godzin pracy pracowników';

COMMENT ON TABLE firma.pensja_stanowisko
    IS 'Tabela pensji na danych stanowiskach';

COMMENT ON TABLE firma.premia
    IS 'Tabela premii dla pracowników';

COMMENT ON TABLE firma.wynagrodzenie
    IS 'Tabela wynagrodzeń pracowników';

f)

Więzy integralności zostały ustawione na brak akcji przy tworzeniu kluczy obcych

5.

a)

ALTER TABLE firma.godziny
    ADD COLUMN miesiac integer GENERATED ALWAYS AS (date_part('month'::text, data)) STORED;

ALTER TABLE firma.godziny
    ADD COLUMN numer_tygodnia integer GENERATED ALWAYS AS (extract(week from data)) STORED;

b)

ALTER TABLE firma.wynagrodzenie ALTER COLUMN date TYPE text;

c)

UPDATE firma.premia
SET kwota = 0
WHERE rodzaj = 'brak';

6)

a)

SELECT id_pracownika, nazwisko FROM firma.pracownicy;

b)

SELECT pracownicy.id_pracownika FROM firma.pracownicy JOIN firma.wynagrodzenie ON firma.pracownicy.id_pracownika = firma.wynagrodzenie.id_pracownika 
JOIN firma.pensja_stanowisko ON firma.wynagrodzenie.id_pensji = firma.pensja_stanowisko.id_pensji WHERE kwota > 1000;

c)

SELECT pracownicy.id_pracownika FROM firma.pracownicy JOIN firma.wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN firma.pensja_stanowisko 
ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN firma.premia ON wynagrodzenie.id_premii = premia.id_premii WHERE premia.rodzaj LIKE 'brak' AND pensja_stanowisko.kwota > 2000;

d)

SELECT * FROM firma.pracownicy WHERE imie LIKE 'J%';

e)

SELECT * FROM firma.pracownicy WHERE LOWER(nazwisko) LIKE '%n%' AND imie LIKE '%a';

f)

SELECT imie, nazwisko, liczba_godzin-160 AS nadgodziny FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika 
JOIN firma.godziny ON godziny.id_godziny = wynagrodzenie.id_godziny WHERE liczba_godzin > 160;

g)

SELECT imie, nazwisko FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN firma.pensja_stanowisko 
ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE kwota >= 1500 AND kwota <= 3000;

h)

SELECT imie, nazwisko FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN firma.godziny 
ON godziny.id_godziny = wynagrodzenie.id_godziny JOIN firma.premia ON premia.id_premii = wynagrodzenie.id_premii WHERE liczba_godzin > 160 AND rodzaj LIKE 'brak';

7.

a)

SELECT imie, nazwisko, kwota FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN firma.pensja_stanowisko 
ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji ORDER BY kwota;

b)

SELECT imie, nazwisko, pensja_stanowisko.kwota, premia.kwota FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika 
JOIN firma.pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji JOIN firma.premia ON premia.id_premii = wynagrodzenie.id_premii ORDER BY pensja_stanowisko.kwota ASC, premia.kwota DESC;

c)

SELECT stanowisko, COUNT(pracownicy.id_pracownika) FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika 
JOIN firma.pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji GROUP BY stanowisko;

d)

SELECT AVG(pensja_stanowisko.kwota)::numeric(10,2) , MIN(pensja_stanowisko.kwota), MAX(pensja_stanowisko.kwota) FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika 
JOIN firma.pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji WHERE stanowisko LIKE 'kierownik';

e)

SELECT SUM(kwota) FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN firma.pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji;

f)

SELECT stanowisko, SUM(kwota) FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN firma.pensja_stanowisko 
ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji GROUP BY stanowisko;

g)

SELECT stanowisko, COUNT(pracownicy.id_pracownika) FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN firma.pensja_stanowisko 
ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji JOIN firma.premia ON premia.id_premii = wynagrodzenie.id_premii WHERE rodzaj NOT LIKE 'brak' GROUP BY stanowisko;

h)

DELETE FROM firma.pracownicy WHERE pracownicy.id_pracownika IN (SELECT pracownicy.id_pracownika FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika 
JOIN firma.pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji WHERE kwota < 1200);

8.

ALTER TABLE firma.pracownicy ALTER COLUMN telefon TYPE character varying(17);

a)

UPDATE firma.pracownicy SET telefon = CONCAT('(+48)', telefon);

b)

UPDATE firma.pracownicy SET telefon = CONCAT(LEFT(telefon, 5), ' ', SUBSTRING(telefon, 6, 3), '-', SUBSTRING(telefon, 9, 3), '-', RIGHT(telefon, 3));

c)

SELECT id_pracownika, UPPER(imie), UPPER(nazwisko), UPPER(adres), telefon FROM firma.pracownicy ORDER BY LENGTH(nazwisko) DESC LIMIT 1;

d)

SELECT MD5(CONCAT(pracownicy.id_pracownika, imie, nazwisko, adres, telefon, kwota)) FROM firma.pracownicy JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika 
JOIN firma.pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji;

9.

SELECT CONCAT('Pracownik ', pracownicy.imie, ' ', pracownicy.nazwisko, ', w dniu ', godziny.data,' otrzymal pensje calkowita na kwote ', (pensja_stanowisko.kwota + premia.kwota), ', gdzie wynagrodzenie zasadnicze wynosilo: ', 
pensja_stanowisko.kwota, ' zl, premia:', premia.kwota, ' zl, liczba nadgodzin: ', (CASE WHEN godziny.liczba_godzin <= 160 THEN 0 ELSE (godziny.liczba_godzin-160) END)) FROM firma.pracownicy INNER JOIN firma.wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika 
INNER JOIN firma.godziny ON godziny.id_godziny = wynagrodzenie.id_godziny INNER JOIN firma.pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji INNER JOIN firma.premia ON premia.id_premii = wynagrodzenie.id_premii;



